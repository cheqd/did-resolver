name: "Build & Test"
on:
  workflow_call:
defaults:
  run:
    shell: bash

jobs:

  build-binary:
    name: "Build binary"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v4
        with:
          go-version-file: ./go.mod
          cache: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: build --clean --snapshot --single-target

      - name: Store artifact
        uses: actions/upload-artifact@v3
        with:
          name: cheqd-noded
          path: dist/did-resolver_linux_amd64_v1/did-resolver

  build-docker:
    name: "Build Docker image"
    runs-on: ubuntu-latest
    needs: build-binary
    env:
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          install: true
          version: latest
      
      - name: Configure Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
            ghcr.io/${{ env.IMAGE_NAME }}
            registry.digitalocean.com/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=raw,value=staging-latest
            type=sha,format=long
      
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          outputs: type=docker,dest=did-resolver-staging.tar
          cache-from: type=gha
          cache-to: type=gha,mode=min
      
      - name: Upload staging image as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: did-resolver-staging
          path: did-resolver-staging.tar
