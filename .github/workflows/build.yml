name: "Build & Test"
on:
  workflow_call:
defaults:
  run:
    shell: bash

jobs:

  unit-tests:
    name: "Unit Tests"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
      
      - name: Run Golang unit tests
        run: go test -v ./...

  build-docker:
    name: "Build Docker image"
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
          version: latest
      
      - name: Configure Docker image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.IMAGE_NAME }}
            registry.digitalocean.com/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=raw,value=staging-latest
            type=sha,format=long
      
      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          load: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Set up Docker container for test
        run: docker-compose -f tests/docker/docker-compose.yml --env-file tests/docker/docker-compose.env up -d --no-build

      - name: Setup Python environment
        working-directory: ./tests/pytest
        run: |
          set -euo pipefail
          pip3 install -r requirements.txt >> /dev/null
          sudo chmod -R 775 /home/runner/

      - name: Run tests
        working-directory: ./tests/pytest
        run: |
          set -euo pipefail
          pytest -v -rP ./*.py

      - name: Save staging Docker image
        run: docker save registry.digitalocean.com/${{ env.IMAGE_NAME }} > did-resolver-staging.tar

      - name: Upload build image as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: did-resolver-staging
          path: did-resolver-staging.tar
