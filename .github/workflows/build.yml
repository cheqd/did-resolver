name: "Build & Test"
on:
  workflow_call:
defaults:
  run:
    shell: bash

jobs:

  unit-tests:
    name: "Unit Tests"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
      
      - name: Run Golang unit tests
        run: go test -v ./...

  build-docker:
    name: "Build Docker image"
    runs-on: ubuntu-latest
    env:
      TEST_TAG: ${{ github.repository }}:test

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
          version: latest

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          load: true
          tags: ${{ env.TEST_TAG }}

      - name: Set up Docker container for test
        run: docker-compose -f tests/docker/docker-compose.yml --env-file tests/docker/docker-compose.env up -d --no-build
        env:
          TEST_TAG: ${{ env.TEST_TAG }}

      - name: Setup Python environment
        working-directory: ./tests/pytest
        run: |
          set -euo pipefail
          pip3 install -r requirements.txt >> /dev/null
          sudo chmod -R 775 /home/runner/

      - name: Run tests
        working-directory: ./tests/pytest
        run: |
          set -euo pipefail
          pytest -v -rP ./*.py
